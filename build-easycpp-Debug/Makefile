#############################################################################
# Makefile for building: libeasycpp.so.1.0.0
# Generated by qmake (2.01a) (Qt 4.8.7) on: ?? 8? 24 10:48:50 2016
# Project:  ../easycpp/easycpp.pro
# Template: lib
# Command: /usr/lib/x86_64-linux-gnu/qt4/bin/qmake -spec /usr/share/qt4/mkspecs/linux-g++-64 CONFIG+=debug CONFIG+=declarative_debug -o Makefile ../easycpp/easycpp.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
CFLAGS        = -m64 -pipe -g -Wall -W -D_REENTRANT -fPIC $(DEFINES)
CXXFLAGS      = -m64 -pipe -g -Wall -W -D_REENTRANT -fPIC $(DEFINES)
INCPATH       = -I/usr/local/include -I. -I../easycpp -I.
LINK          = g++
LFLAGS        = -m64 -shared -Wl,-soname,libeasycpp.so.1
LIBS          = $(SUBLIBS) -lboost_system -lhiredis -levent -lpthread 
AR            = ar cqs
RANLIB        = 
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = cp 
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = ../easycpp/main.cpp \
		../easycpp/easycpp/helpers/string.cpp \
		../easycpp/easycpp/helpers/datetime.cpp \
		../easycpp/easycpp/helpers/file.cpp \
		../easycpp/easycpp/helpers/log.cpp \
		../easycpp/easycpp/helpers/type.cpp \
		../easycpp/easycpp/helpers/json.cpp \
		../easycpp/easycpp/libraries/exception.cpp \
		../easycpp/easycpp/models/redis.cpp \
		../easycpp/easycpp/helpers/http.cpp 
OBJECTS       = main.o \
		string.o \
		datetime.o \
		file.o \
		log.o \
		type.o \
		json.o \
		exception.o \
		redis.o \
		http.o
QMAKE_TARGET  = easycpp
DESTDIR       = 
TARGET        = libeasycpp.so.1.0.0
TARGETA       = libeasycpp.a
TARGETD       = libeasycpp.so.1.0.0
TARGET0       = libeasycpp.so
TARGET1       = libeasycpp.so.1
TARGET2       = libeasycpp.so.1.0

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all:   $(TARGET)

$(TARGET):  $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)
	{ test -z "$(DESTDIR)" || cd "$(DESTDIR)"; } && test $$(gdb --version | sed -e 's,[^0-9][^0-9]*\([0-9]\)\.\([0-9]\).*,\1\2,;q') -gt 72 && gdb --nx --batch --quiet -ex 'set confirm off' -ex "save gdb-index ." -ex quit '$(TARGET)' && test -f $(TARGET).gdb-index && objcopy --add-section '.gdb_index=$(TARGET).gdb-index' --set-section-flags '.gdb_index=readonly' '$(TARGET)' '$(TARGET)' && rm -f $(TARGET).gdb-index || true



staticlib: $(TARGETA)

$(TARGETA):  $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS)

clean: 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core

####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) $(TARGET0) $(TARGET1) $(TARGET2) $(TARGETA)
	-$(DEL_FILE) 

####### Compile

main.o: ../easycpp/main.cpp ../easycpp/easycpp/helpers/string.h \
		../easycpp/easycpp/helpers/datetime.h \
		../easycpp/easycpp/helpers/file.h \
		../easycpp/easycpp/helpers/log.h \
		../easycpp/easycpp/helpers/type.h \
		../easycpp/easycpp/helpers/json.h \
		../easycpp/easycpp/libraries/exception.h \
		../easycpp/easycpp/libraries/json.h \
		../easycpp/easycpp/helpers/http.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o ../easycpp/main.cpp

string.o: ../easycpp/easycpp/helpers/string.cpp ../easycpp/easycpp/helpers/string.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o string.o ../easycpp/easycpp/helpers/string.cpp

datetime.o: ../easycpp/easycpp/helpers/datetime.cpp ../easycpp/easycpp/helpers/datetime.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o datetime.o ../easycpp/easycpp/helpers/datetime.cpp

file.o: ../easycpp/easycpp/helpers/file.cpp ../easycpp/easycpp/helpers/file.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o file.o ../easycpp/easycpp/helpers/file.cpp

log.o: ../easycpp/easycpp/helpers/log.cpp ../easycpp/easycpp/helpers/log.h \
		../easycpp/easycpp/helpers/file.h \
		../easycpp/easycpp/helpers/datetime.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o log.o ../easycpp/easycpp/helpers/log.cpp

type.o: ../easycpp/easycpp/helpers/type.cpp ../easycpp/easycpp/helpers/type.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o type.o ../easycpp/easycpp/helpers/type.cpp

json.o: ../easycpp/easycpp/helpers/json.cpp ../easycpp/easycpp/helpers/json.h \
		../easycpp/easycpp/libraries/exception.h \
		../easycpp/easycpp/libraries/json.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o json.o ../easycpp/easycpp/helpers/json.cpp

exception.o: ../easycpp/easycpp/libraries/exception.cpp ../easycpp/easycpp/libraries/exception.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o exception.o ../easycpp/easycpp/libraries/exception.cpp

redis.o: ../easycpp/easycpp/models/redis.cpp ../easycpp/easycpp/models/redis.h \
		../easycpp/easycpp/helpers/string.h \
		../easycpp/easycpp/helpers/type.h \
		../easycpp/easycpp/libraries/exception.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o redis.o ../easycpp/easycpp/models/redis.cpp

http.o: ../easycpp/easycpp/helpers/http.cpp ../easycpp/easycpp/helpers/http.h \
		../easycpp/easycpp/helpers/json.h \
		../easycpp/easycpp/libraries/exception.h \
		../easycpp/easycpp/libraries/json.h \
		../easycpp/easycpp/helpers/type.h \
		../easycpp/easycpp/helpers/string.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o http.o ../easycpp/easycpp/helpers/http.cpp

####### Install

install:
	$(INSTALL_PROGRAM) $(TARGETD) /usr/lib
	cd /usr/lib; ln -f -s $(TARGETD) $(TARGET0); ln -f -s $(TARGETD) $(TARGET1); ln -f -s $(TARGETD) $(TARGET2)
	$(MKDIR) /usr/local/include/$(QMAKE_TARGET)
	$(COPY_DIR) ../easycpp/easycpp/* /usr/local/include/$(QMAKE_TARGET)
         
uninstall:   FORCE

FORCE:




